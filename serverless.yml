
service: serverlessCRMCustomers


provider:
  name: aws
  runtime: nodejs8.10
  environment:
    DYNAMODB_TABLE: crmCustomers
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-east-1:*:table/${self:provider.environment.DYNAMODB_TABLE}"


# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

functions:
  all:
      handler: customers/all.all
      events:
        - http:
            path: customers/
            method: get
            cors: true

# you can add CloudFormation resource templates here
resources:
  Resources:
    customersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: customer_id
            AttributeType: S
          - AttributeName: document
            AttributeType: S
          - AttributeName: date
            AttributeType: N
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: customer_id
            KeyType: HASH
          - AttributeName: document
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: "invoiceIndex"
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            KeySchema:
              - AttributeName: document
                KeyType: HASH
              - AttributeName: date
                KeyType: RANGE
          - IndexName: "emailIndex"
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            KeySchema:
              - AttributeName: email
                KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1


plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    start:
      migrate: true
      seed: true
    seed:
      test:
        sources:
          - table: ${self:provider.environment.DYNAMODB_TABLE}
            sources: [./customerSeed.json, ./invoiceSeed.json]